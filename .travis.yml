osx_image: xcode10.2
xcode_project: CodableAlamofire.xcodeproj
matrix:
  include:
    - osx_image:  
      os: linux 
      env: TEST=Unix swift=5.0

    - xcode_scheme: CodableAlamofire-macOS
      language: objective-c
      env:
        - XCODE_SDK=macosx10.14
        - XCODE_ACTION="test"
        - XCODE_DESTINATION="arch=x86_64"

    - xcode_scheme: CodableAlamofire-iOS
      language: objective-c
      env:
        - XCODE_SDK=iphonesimulator12.2
        - XCODE_ACTION="test"
        - XCODE_DESTINATION="platform=iOS Simulator,OS=12.2,name=iPhone 6"

    - xcode_scheme: CodableAlamofire-tvOS
      language: objective-c
      env:
        - XCODE_SDK=appletvsimulator12.2
        - XCODE_ACTION="test"
        - XCODE_DESTINATION="platform=tvOS Simulator,OS=12.2,name=Apple TV"

    - xcode_scheme: CodableAlamofire-watchOS
      language: objective-c
      env:
        - XCODE_SDK=watchsimulator5.2
        - XCODE_ACTION="build" 
        - XCODE_DESTINATION="platform=watchOS Simulator,name=Apple Watch - 38mm"
install:   
  - if [[ `uname` == "Linux" ]] ; then
      curl "https://swift.org/builds/swift-${swift}-release/ubuntu1604/swift-${swift}-RELEASE/swift-${swift}-RELEASE-ubuntu16.04.tar.gz" > /tmp/swift.tar.gz;
      tar -xzf /tmp/swift.tar.gz -C /tmp;
      export PATH="${PATH}:/tmp/swift-${swift}-RELEASE-ubuntu16.04/usr/bin";
      swift -version;
    fi
script:    
    - if [[ `uname` == "Linux" ]] ; then
        swift --version
        swift test;
      fi

    - if [[ `uname` == "Darwin" ]] ; then
        set -o pipefail;
        xcodebuild -version;
        xcodebuild -showsdks;
        instruments -s devices;
        xcodebuild -project "$TRAVIS_XCODE_PROJECT" -scheme "$TRAVIS_XCODE_SCHEME" -sdk "$XCODE_SDK" -destination "$XCODE_DESTINATION" -configuration Debug ENABLE_TESTABILITY=YES $XCODE_ACTION | xcpretty;
      fi
after_success:
    - sleep 5 # workaround https://github.com/travis-ci/travis-ci/issues/4725